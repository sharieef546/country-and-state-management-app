{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaffe\\\\Videos\\\\Captures\\\\resume\\\\backend\\\\country-state-city-management\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CountryList from './CountryList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const addCountry = () => {\n    const countryName = prompt('Enter country name:');\n    if (countryName) {\n      setCountries([...countries, {\n        name: countryName,\n        states: []\n      }]);\n    }\n  };\n  const editCountry = index => {\n    const newName = prompt('Enter new country name:', countries[index].name);\n    if (newName && window.confirm('Are you sure you want to update the country name?')) {\n      const updatedCountries = [...countries];\n      updatedCountries[index].name = newName;\n      setCountries(updatedCountries);\n    }\n  };\n  const deleteCountry = index => {\n    if (window.confirm('Are you sure you want to delete this country?')) {\n      const updatedCountries = countries.filter((_, i) => i !== index);\n      setCountries(updatedCountries);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Country, State, and City Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addCountry,\n      children: \"Add Country\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CountryList, {\n      countries: countries,\n      editCountry: editCountry,\n      deleteCountry: deleteCountry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"gwqfcWgq2x/FJogDCUDGbZQoAlg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CountryList","jsxDEV","_jsxDEV","App","_s","countries","setCountries","addCountry","countryName","prompt","name","states","editCountry","index","newName","window","confirm","updatedCountries","deleteCountry","filter","_","i","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jaffe/Videos/Captures/resume/backend/country-state-city-management/src/components/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport CountryList from './CountryList';\n\nconst App = () => {\n    const [countries, setCountries] = useState([]);\n\n    const addCountry = () => {\n        const countryName = prompt('Enter country name:');\n        if (countryName) {\n            setCountries([...countries, { name: countryName, states: [] }]);\n        }\n    };\n\n    const editCountry = (index) => {\n        const newName = prompt('Enter new country name:', countries[index].name);\n        if (newName && window.confirm('Are you sure you want to update the country name?')) {\n            const updatedCountries = [...countries];\n            updatedCountries[index].name = newName;\n            setCountries(updatedCountries);\n        }\n    };\n\n    const deleteCountry = (index) => {\n        if (window.confirm('Are you sure you want to delete this country?')) {\n            const updatedCountries = countries.filter((_, i) => i !== index);\n            setCountries(updatedCountries);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Country, State, and City Management</h1>\n            <button onClick={addCountry}>Add Country</button>\n            <CountryList \n                countries={countries} \n                editCountry={editCountry} \n                deleteCountry={deleteCountry} \n            />\n        </div>\n    );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACrB,MAAMC,WAAW,GAAGC,MAAM,CAAC,qBAAqB,CAAC;IACjD,IAAID,WAAW,EAAE;MACbF,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAE;QAAEK,IAAI,EAAEF,WAAW;QAAEG,MAAM,EAAE;MAAG,CAAC,CAAC,CAAC;IACnE;EACJ,CAAC;EAED,MAAMC,WAAW,GAAIC,KAAK,IAAK;IAC3B,MAAMC,OAAO,GAAGL,MAAM,CAAC,yBAAyB,EAAEJ,SAAS,CAACQ,KAAK,CAAC,CAACH,IAAI,CAAC;IACxE,IAAII,OAAO,IAAIC,MAAM,CAACC,OAAO,CAAC,mDAAmD,CAAC,EAAE;MAChF,MAAMC,gBAAgB,GAAG,CAAC,GAAGZ,SAAS,CAAC;MACvCY,gBAAgB,CAACJ,KAAK,CAAC,CAACH,IAAI,GAAGI,OAAO;MACtCR,YAAY,CAACW,gBAAgB,CAAC;IAClC;EACJ,CAAC;EAED,MAAMC,aAAa,GAAIL,KAAK,IAAK;IAC7B,IAAIE,MAAM,CAACC,OAAO,CAAC,+CAA+C,CAAC,EAAE;MACjE,MAAMC,gBAAgB,GAAGZ,SAAS,CAACc,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKR,KAAK,CAAC;MAChEP,YAAY,CAACW,gBAAgB,CAAC;IAClC;EACJ,CAAC;EAED,oBACIf,OAAA;IAAAoB,QAAA,gBACIpB,OAAA;MAAAoB,QAAA,EAAI;IAAmC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5CxB,OAAA;MAAQyB,OAAO,EAAEpB,UAAW;MAAAe,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjDxB,OAAA,CAACF,WAAW;MACRK,SAAS,EAAEA,SAAU;MACrBO,WAAW,EAAEA,WAAY;MACzBM,aAAa,EAAEA;IAAc;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACtB,EAAA,CArCID,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAuCT,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}