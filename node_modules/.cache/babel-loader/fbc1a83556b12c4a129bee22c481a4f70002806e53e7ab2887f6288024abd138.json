{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaffe\\\\Videos\\\\Captures\\\\resume\\\\backend\\\\country-state-city-management\\\\src\\\\components\\\\CityList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CityList = ({\n  cities,\n  setCities\n}) => {\n  _s();\n  var _cities$state;\n  const {\n    state\n  } = useParams();\n  const [newCity, setNewCity] = useState('');\n  const handleAddCity = () => {\n    if (newCity) {\n      setCities({\n        ...cities,\n        [state]: [...cities[state], newCity]\n      });\n      setNewCity('');\n    }\n  };\n  const handleDeleteCity = cityToDelete => {\n    if (window.confirm('Are you sure you want to delete this city?')) {\n      setCities({\n        ...cities,\n        [state]: cities[state].filter(city => city !== cityToDelete)\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"City Management for \", state]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newCity,\n      onChange: e => setNewCity(e.target.value),\n      placeholder: \"Add a new city\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddCity,\n      children: \"Add City\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: (_cities$state = cities[state]) === null || _cities$state === void 0 ? void 0 : _cities$state.map(city => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [city, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteCity(city),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)]\n      }, city, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(CityList, \"+mwEGVAGxh6Nse9UTOBPKHgRukM=\", false, function () {\n  return [useParams];\n});\n_c = CityList;\nexport default CityList;\nvar _c;\n$RefreshReg$(_c, \"CityList\");","map":{"version":3,"names":["React","useState","useParams","jsxDEV","_jsxDEV","CityList","cities","setCities","_s","_cities$state","state","newCity","setNewCity","handleAddCity","handleDeleteCity","cityToDelete","window","confirm","filter","city","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/jaffe/Videos/Captures/resume/backend/country-state-city-management/src/components/CityList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst CityList = ({ cities, setCities }) => {\n    const { state } = useParams();\n    const [newCity, setNewCity] = useState('');\n\n    const handleAddCity = () => {\n        if (newCity) {\n            setCities({\n                ...cities,\n                [state]: [...cities[state], newCity]\n            });\n            setNewCity('');\n        }\n    };\n\n    const handleDeleteCity = (cityToDelete) => {\n        if (window.confirm('Are you sure you want to delete this city?')) {\n            setCities({\n                ...cities,\n                [state]: cities[state].filter(city => city !== cityToDelete)\n            });\n        }\n    };\n\n    return (\n        <div>\n            <h2>City Management for {state}</h2>\n            <input\n                type=\"text\"\n                value={newCity}\n                onChange={(e) => setNewCity(e.target.value)}\n                placeholder=\"Add a new city\"\n            />\n            <button onClick={handleAddCity}>Add City</button>\n            <ul>\n                {cities[state]?.map((city) => (\n                    <li key={city}>\n                        {city}\n                        <button onClick={() => handleDeleteCity(city)}>Delete</button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default CityList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,aAAA;EACxC,MAAM;IAAEC;EAAM,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC7B,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMY,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAIF,OAAO,EAAE;MACTJ,SAAS,CAAC;QACN,GAAGD,MAAM;QACT,CAACI,KAAK,GAAG,CAAC,GAAGJ,MAAM,CAACI,KAAK,CAAC,EAAEC,OAAO;MACvC,CAAC,CAAC;MACFC,UAAU,CAAC,EAAE,CAAC;IAClB;EACJ,CAAC;EAED,MAAME,gBAAgB,GAAIC,YAAY,IAAK;IACvC,IAAIC,MAAM,CAACC,OAAO,CAAC,4CAA4C,CAAC,EAAE;MAC9DV,SAAS,CAAC;QACN,GAAGD,MAAM;QACT,CAACI,KAAK,GAAGJ,MAAM,CAACI,KAAK,CAAC,CAACQ,MAAM,CAACC,IAAI,IAAIA,IAAI,KAAKJ,YAAY;MAC/D,CAAC,CAAC;IACN;EACJ,CAAC;EAED,oBACIX,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,GAAI,sBAAoB,EAACV,KAAK;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpCpB,OAAA;MACIqB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEf,OAAQ;MACfgB,QAAQ,EAAGC,CAAC,IAAKhB,UAAU,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC5CI,WAAW,EAAC;IAAgB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACFpB,OAAA;MAAQ2B,OAAO,EAAElB,aAAc;MAAAO,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjDpB,OAAA;MAAAgB,QAAA,GAAAX,aAAA,GACKH,MAAM,CAACI,KAAK,CAAC,cAAAD,aAAA,uBAAbA,aAAA,CAAeuB,GAAG,CAAEb,IAAI,iBACrBf,OAAA;QAAAgB,QAAA,GACKD,IAAI,eACLf,OAAA;UAAQ2B,OAAO,EAAEA,CAAA,KAAMjB,gBAAgB,CAACK,IAAI,CAAE;UAAAC,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAFzDL,IAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGT,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAChB,EAAA,CA3CIH,QAAQ;EAAA,QACQH,SAAS;AAAA;AAAA+B,EAAA,GADzB5B,QAAQ;AA6Cd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}