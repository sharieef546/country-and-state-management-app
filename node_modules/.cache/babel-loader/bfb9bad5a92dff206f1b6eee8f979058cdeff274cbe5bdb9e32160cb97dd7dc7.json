{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaffe\\\\Videos\\\\Captures\\\\resume\\\\backend\\\\country-state-city-management\\\\src\\\\components\\\\StateList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './StateList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StateList = ({\n  states,\n  setStates\n}) => {\n  _s();\n  const {\n    country\n  } = useParams();\n  const [newState, setNewState] = useState('');\n  const navigate = useNavigate();\n  const handleAddState = () => {\n    if (newState) {\n      setStates({\n        ...states,\n        [country]: [...(states[country] || []), newState]\n      });\n      setNewState('');\n    }\n  };\n  const handleDeleteState = stateToDelete => {\n    if (window.confirm('Are you sure you want to delete this state? This will also delete all associated cities.')) {\n      setStates({\n        ...states,\n        [country]: states[country].filter(state => state !== stateToDelete)\n      });\n    }\n  };\n  const handleManageCities = state => {\n    navigate(`/cities/${state}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"state-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"State Management for \", country]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newState,\n      onChange: e => setNewState(e.target.value),\n      placeholder: \"Add a new state\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddState,\n      children: \"Add State\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: (states[country] || []).map(state => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [state, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteState(state),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleManageCities(state),\n          children: \"Manage Cities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)]\n      }, state, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(StateList, \"/u9hS+9PzF1xHs/KHo+iJ+x39UA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = StateList;\nexport default StateList;\nvar _c;\n$RefreshReg$(_c, \"StateList\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","jsxDEV","_jsxDEV","StateList","states","setStates","_s","country","newState","setNewState","navigate","handleAddState","handleDeleteState","stateToDelete","window","confirm","filter","state","handleManageCities","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/jaffe/Videos/Captures/resume/backend/country-state-city-management/src/components/StateList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './StateList.css';\n\nconst StateList = ({ states, setStates }) => {\n    const { country } = useParams();\n    const [newState, setNewState] = useState('');\n    const navigate = useNavigate();\n\n    const handleAddState = () => {\n        if (newState) {\n            setStates({\n                ...states,\n                [country]: [...(states[country] || []), newState]\n            });\n            setNewState('');\n        }\n    };\n\n    const handleDeleteState = (stateToDelete) => {\n        if (window.confirm('Are you sure you want to delete this state? This will also delete all associated cities.')) {\n            setStates({\n                ...states,\n                [country]: states[country].filter(state => state !== stateToDelete)\n            });\n        }\n    };\n\n    const handleManageCities = (state) => {\n        navigate(`/cities/${state}`);\n    };\n\n    return (\n        <div className=\"state-management\">\n            <h2>State Management for {country}</h2>\n            <input\n                type=\"text\"\n                value={newState}\n                onChange={(e) => setNewState(e.target.value)}\n                placeholder=\"Add a new state\"\n            />\n            <button onClick={handleAddState}>Add State</button>\n            <ul>\n                {(states[country] || []).map((state) => (\n                    <li key={state}>\n                        {state}\n                        <button onClick={() => handleDeleteState(state)}>Delete</button>\n                        <button onClick={() => handleManageCities(state)}>Manage Cities</button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default StateList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}