{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaffe\\\\Videos\\\\Captures\\\\resume\\\\backend\\\\country-state-city-management\\\\src\\\\components\\\\CountryList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './CountryList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryList = ({\n  countries,\n  onAddCountry,\n  onEditCountry,\n  onDeleteCountry\n}) => {\n  _s();\n  const [newCountry, setNewCountry] = useState('');\n  const navigate = useNavigate();\n  const handleAddCountry = () => {\n    if (newCountry) {\n      onAddCountry(newCountry);\n      setNewCountry('');\n    }\n  };\n  const handleEditCountry = country => {\n    const updatedName = prompt('Enter new country name:', country);\n    if (updatedName && window.confirm('Are you sure you want to update this country?')) {\n      onEditCountry(country, updatedName);\n    }\n  };\n  const handleDeleteCountry = country => {\n    if (window.confirm('Are you sure you want to delete this country? This will also delete all associated states and cities.')) {\n      onDeleteCountry(country);\n    }\n  };\n  const handleManageStates = country => {\n    navigate(`/states/${country}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"country-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Country Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newCountry,\n      onChange: e => setNewCountry(e.target.value),\n      placeholder: \"Add a new country\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddCountry,\n      children: \"Add Country\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: countries.map(country => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [country, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditCountry(country),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteCountry(country),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleManageStates(country),\n          children: \"Manage States\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)]\n      }, country, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(CountryList, \"wVdrvBxwdXqHpX7vRyfZ340MuKg=\", false, function () {\n  return [useNavigate];\n});\n_c = CountryList;\nexport default CountryList;\nvar _c;\n$RefreshReg$(_c, \"CountryList\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","CountryList","countries","onAddCountry","onEditCountry","onDeleteCountry","_s","newCountry","setNewCountry","navigate","handleAddCountry","handleEditCountry","country","updatedName","prompt","window","confirm","handleDeleteCountry","handleManageStates","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/jaffe/Videos/Captures/resume/backend/country-state-city-management/src/components/CountryList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './CountryList.css';\n\nconst CountryList = ({ countries, onAddCountry, onEditCountry, onDeleteCountry }) => {\n    const [newCountry, setNewCountry] = useState('');\n    const navigate = useNavigate();\n\n    const handleAddCountry = () => {\n        if (newCountry) {\n            onAddCountry(newCountry);\n            setNewCountry('');\n        }\n    };\n\n    const handleEditCountry = (country) => {\n        const updatedName = prompt('Enter new country name:', country);\n        if (updatedName && window.confirm('Are you sure you want to update this country?')) {\n            onEditCountry(country, updatedName);\n        }\n    };\n\n    const handleDeleteCountry = (country) => {\n        if (window.confirm('Are you sure you want to delete this country? This will also delete all associated states and cities.')) {\n            onDeleteCountry(country);\n        }\n    };\n\n    const handleManageStates = (country) => {\n        navigate(`/states/${country}`);\n    };\n\n    return (\n        <div className='country-management'>\n            <h2>Country Management</h2>\n            <input\n                type=\"text\"\n                value={newCountry}\n                onChange={(e) => setNewCountry(e.target.value)}\n                placeholder=\"Add a new country\"\n            />\n            <button onClick={handleAddCountry}>Add Country</button>\n            <ul>\n                {countries.map((country) => (\n                    <li key={country}>\n                        {country}\n                        <button onClick={() => handleEditCountry(country)}>Edit</button>\n                        <button onClick={() => handleDeleteCountry(country)}>Delete</button>\n                        <button onClick={() => handleManageStates(country)}>Manage States</button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default CountryList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAC;EAAEC,SAAS;EAAEC,YAAY;EAAEC,aAAa;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EACjF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,gBAAgB,GAAGA,CAAA,KAAM;IAC3B,IAAIH,UAAU,EAAE;MACZJ,YAAY,CAACI,UAAU,CAAC;MACxBC,aAAa,CAAC,EAAE,CAAC;IACrB;EACJ,CAAC;EAED,MAAMG,iBAAiB,GAAIC,OAAO,IAAK;IACnC,MAAMC,WAAW,GAAGC,MAAM,CAAC,yBAAyB,EAAEF,OAAO,CAAC;IAC9D,IAAIC,WAAW,IAAIE,MAAM,CAACC,OAAO,CAAC,+CAA+C,CAAC,EAAE;MAChFZ,aAAa,CAACQ,OAAO,EAAEC,WAAW,CAAC;IACvC;EACJ,CAAC;EAED,MAAMI,mBAAmB,GAAIL,OAAO,IAAK;IACrC,IAAIG,MAAM,CAACC,OAAO,CAAC,uGAAuG,CAAC,EAAE;MACzHX,eAAe,CAACO,OAAO,CAAC;IAC5B;EACJ,CAAC;EAED,MAAMM,kBAAkB,GAAIN,OAAO,IAAK;IACpCH,QAAQ,CAAC,WAAWG,OAAO,EAAE,CAAC;EAClC,CAAC;EAED,oBACIZ,OAAA;IAAKmB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBAC/BpB,OAAA;MAAAoB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BxB,OAAA;MACIyB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEnB,UAAW;MAClBoB,QAAQ,EAAGC,CAAC,IAAKpB,aAAa,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC/CI,WAAW,EAAC;IAAmB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACFxB,OAAA;MAAQ+B,OAAO,EAAErB,gBAAiB;MAAAU,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvDxB,OAAA;MAAAoB,QAAA,EACKlB,SAAS,CAAC8B,GAAG,CAAEpB,OAAO,iBACnBZ,OAAA;QAAAoB,QAAA,GACKR,OAAO,eACRZ,OAAA;UAAQ+B,OAAO,EAAEA,CAAA,KAAMpB,iBAAiB,CAACC,OAAO,CAAE;UAAAQ,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAChExB,OAAA;UAAQ+B,OAAO,EAAEA,CAAA,KAAMd,mBAAmB,CAACL,OAAO,CAAE;UAAAQ,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACpExB,OAAA;UAAQ+B,OAAO,EAAEA,CAAA,KAAMb,kBAAkB,CAACN,OAAO,CAAE;UAAAQ,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAJrEZ,OAAO;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKZ,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAClB,EAAA,CAlDIL,WAAW;EAAA,QAEIH,WAAW;AAAA;AAAAmC,EAAA,GAF1BhC,WAAW;AAoDjB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}